# version: '3.9'

# TODO: Search and replace this throughout this file
# Name prefix for the containers.
name: sample-project

# Service Definitions
services:
  # ----------- Nginx Service
  nginx:
    container_name: sample-project-nginx
    build:
      context: .
      dockerfile: containers/Dockerfile_nginx
    ports:
      - '80:80'
    volumes:
      - '../:/var/www/html'
      - './nginx-conf:/etc/nginx/conf.d'
    links:
      - php
    depends_on:
      - php
    networks:
      - backend
      - exposed

  # ----------- PHP Service
  php:
    container_name: sample-project-php
    build:
      context: .
      dockerfile: containers/Dockerfile_php
    volumes:
      - '../:/var/www/html'
      # - './php-logging.conf:/usr/local/etc/php-fpm.d/zz-log.conf'
    networks:
      - backend
      - exposed

  # ----------- Mysql Service
  mysql:
    container_name: sample-project-mysql
    build:
      context: .
      dockerfile: containers/Dockerfile_mysql
    volumes:
      - ./initdb/create-user.sql:/data/application/create-user.sql
      - 'mysql-data:/var/lib/mysql'
    command: --init-file /data/application/create-user.sql
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: abc123
    networks:
      - backend
      - exposed

  # # ----------- Mongodb Service
  # mongodb:
  #   container_name: sample-project-mongodb
  #   build:
  #     context: .
  #     dockerfile: containers/Dockerfile_mongodb
  #   volumes:
  #     - ./initdb:/docker-entrypoint-initdb.d
  #   ports:
  #     - 27017:27017'
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: abc123
  #   networks:
  #     - backend
  #     - exposed

volumes:
  mysql-data:

networks:
  # Network that can be used in
  # other docker-compose or docker containers
  frontend:
    driver: bridge
  # Private network
  backend:
    driver: bridge
    internal: true
  exposed:
    driver: bridge